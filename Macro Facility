/*Macro Parentheses*/
%MACRO macro_name (argument1=, argument2=,..., argumentk=);
<macro_definition>
%MEND <macro_name>;

/*Replacing text strings with macro variables*/
%let CNetID = maozhu20120;
libname MyLib "home/&CNetID./SASWorkshop/Week 4";

/*Display macro variables by the %PUT macro statement*/
%let CNetID = maozhu20120;
%put &CNetID.;
 %put CNetID = &CNetID.;


/*Macro Statement Definition*/
%MACRO macro_name;
<macro_definition>
%MEND <macro_name>; 

%macro CNetID;
maozhu20120
%mend CNetID;
libname MyLib "/home/%CNetID/SASWorkshop/Week 4"


/*Pie Chart*/
proc template;
  define statgraph MyPieChart;
  begingraph;
    entrytitle "Pie Chart of Percents Pothole Reports";
    layout region;
      piechart category = creation_month
      /datalabellocation = callout
       categorydirection = clockwise
       start=90 stat=pct
       othersliceopts = (type=percent percent=5 label = "Other Months");
     endlayout;
   endgraph;
   end;
run;

proc sgrender data = Week2.ChicagoPotHole
        template = MyPieChart;
    title "All Wards";
run;
  


/*Pie Chart Macro*/
%macro MyPieChart
(InputData =,
 ChartTitle =,
 Category =,
 OtherPercent = 5,
 OtherLabel = %str(Others));
  
proc template;
  define statgraph MyPieChart;
  begingraph;
    entrytitle "&ChartTitle.";
    layout region;
      piechart category = &Category.
      /datalabellocation = callout
       categorydirection = clockwise
       start=90 stat=pct
       othersliceopts = (type=percent percent=&OtherPercent. label = "&OtherLabel.");
     endlayout;
   endgraph;
   end;
run;

/*Show a frequency table to check pie chart percents*/
title "Frequency Table for &Category.";
proc freq data = &InputData.;
  tables &Category.;
run;

proc sgrender data = &InputData. template = MyPieChart;
  title "&ChartTitle.";
run;

%mend MyPieChart; 


/*Use Macro*/
%MyPieChart(
InputData = sashelp.cars,
ChartTitle = Pie Chart of Origin,
Category = ORIGIN);


/*HeatMap*/
proc template;
  define statgraph HeatMap;
  begingraph/designwidth = 800 designheight = 400;
    entrytitle "Number of Cylinders By Origin";
    layout overlay/
      xaxisopts = (label = "Origin")
      yaxisopts = (label = "Number of Cylinders");
      heatmapparm x = Origin y = Cylinders
          colorresponse = _FREQ_/
          name = "heatmapparm"
          xbinaxis = false
          ybinaxis = false;
      continuouslegend "heatmapparm"/
            orient=vertical location= outside
            haligh = center valign = center
            valuecounthint=10;
      endlayout;
    endgraph;
    end;
run;

proc summary data = sashelp.cars nway;
   class Cylinders Origin;
   output out= N_Count;
run;

proc tabulate data = N_Count;
   class Cylinders Origin;
   freq _FREQ_;
   table(Origin ALL),(n)*(Cylinders ALL);
run;

proc sgrender data = N_Count
   template = HeatMap;
run;



/*Macro for HeatMap*/
%macro MyHeatMap 
(InputData =,
 ChartTitle =,
 XCategory =,
 YCategory=,
 XLabel=,
 yLabel=);
  
proc template;
  define statgraph HeatMap;
  begingraph/designwidth = 800 designheight = 400;
    entrytitle "&ChartTitle.";
    layout overlay/
      xaxisopts = (label = "&XLabel.")
      yaxisopts = (label = "&YLabel.");
      heatmapparm x = &XCategory. y = &YCategory.

colorresponse = _FREQ_/
          name = "heatmapparm"
          xbinaxis = false
          ybinaxis = false;
      continuouslegend "heatmapparm"/
            orient=vertical location= outside
            haligh = center valign = center
            valuecounthint=10;
      endlayout;
    endgraph;
    end;
run;

proc summary data = &InputData. nway;
   class &XCategory. &YCategory.;
   output out= N_Count;
run;

proc tabulate data = N_Count;
   class &XCategory. &YCategory.;
   freq _FREQ_;
   table(&XCategory. ALL),(n)*(&YCategory. ALL);
run;

proc sgrender data = N_Count
   template = HeatMap;
run;

%MyHeatMap
(InputData = sashelp.cars,
 ChartTitle = Number of Cylinders BY Origin,
 XCategory = Origin,
 YCategory = Cylinders,
 XLabel = Origin of Vehicles,
 YLabel = Number of Cylinders);


/*Data Value to Macro Variable*/
data Toy;
input x @@; /*@@ instructs SAS to keep reading until end of line*/
datalines;
1 2 3 4 5 6 7 8 9
run;

data Toy; 
set Toy end = eof;
retain sum 0;
sum + x;
if (eof eq 1) then call symput('_Sum_', trim(put(sum, best32.-l)));
run;

%put _Sum_ = &_Sum_.;
data Toy; 
set Toy;
Sum = &_Sum_.;
ColumnPercent = 100*(x/&_Sum_.);
run; 


/*Call System*/
data Toy;
input x @@; /*@@ instructs SAS to keep reading until end of line*/
datalines;
1 2 3 4 5 6 7 8 9
run;

data Toy;
set Toy end = eof;
/*Initialize min_x and max_x to system missing*/
retain min_x.;
retain max_x.;
/*The min() function will return the first non-missing x if min_x is missing*/
min_x = min(min_x, x);
/*The max() function will return the first non-missing x if max_x is missing*/
max_x = max(max_x, x);

if(eof eq 1) then do;
call symput('_min_', trim(put(min_x, best32.-l)));
call symput('_max_', trim(put(max_x, best32.-l)));
end;
run;

%put _min_ = &_min_.;
%put _max_ = &_max_.;

data Toy;
set Toy;
y = (x - &_min_.)/(&_max_.-&_min_.);
run;

proc print data = Toy;
run;


















      
      


